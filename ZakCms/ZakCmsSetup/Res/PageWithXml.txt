##The standard message

The standard message is made of three parts: Title, Context and Attributes. Depending on the target this will be rendered in different ways and will produce different results on the target:

- **Android** Only the Title will be shown.
- **iOS** Only the Title will be shown. Upon tapping the "View" button the application will be opened, otherwise tapping the "Close" button simply close the notification.
- **Windows Phone 7** Title and Content will be shown. Upon tapping on the notification, if some additional parameter is specified, the application is opened.
-  **RIM** Everything is handled by the application.
 
### Message received by Android

The message received by Android will be...

### Message received by iOS

The message received by iOS will be...

###Message received by Windows Phone 7

Standard message with title and content without parameters. From a message to the platform:

	{   
		"Title":"Dummy Title", 
		"Content":"Dummy Content", 
		"Context":"Deltatre"
	}

The following message will be sent to the device:

	<?xml version="1.0" encoding="utf-8"?>
	<wp:Notification xmlns:wp="WPNotification">
		<wp:Toast>
			<wp:Text1>Dummy Title</wp:Text1>
			<wp:Text2>Dummy Content</wp:Text2>
			<wp:Param></wp:Param>
		</wp:Toast>
	</wp:Notification>

Standard message with content and title, plus standard parameters (WIN7_P1=test). The parameters will be passed to the main page.  
The parameters content MUST BE already in a format similar to the one of the GET request. No special characters etc. From a message to the platform:

	{   
		"Title":"Dummy Title", 
		"Content":"Dummy Content", 
		"Context":"Deltatre", 
		"Attributes": 
		[ {"Name" : "WIN7_P1", "Value": "test"} ] 
	}

The following message will be sent to the device:

	<?xml version="1.0" encoding="utf-8"?>
	<wp:Notification xmlns:wp="WPNotification">
		<wp:Toast>
			<wp:Text1>Dummy Title</wp:Text1>
			<wp:Text2>Dummy Content</wp:Text2>
			<wp:Param>?P1=test</wp:Param>
		</wp:Toast>
	</wp:Notification>

Custom toast message with parameter. Tapping on the toast the user will be redirectedto the /SecondPage.xaml, passing the CUSTOM_PAR (or how you will call it) parameter with the value "test" to the page. From a message to the platform:

	{   
		"Title":"Dummy Title", 
		"Content":"Dummy Content", 
		"Context":"Deltatre", 
		"Attributes": [ 
			{"Name" : "WIN7_TYPE", "Value":"toast"},
			{ "Name" : "WIN7_TOAST_TEXT_1", "Value" :"Title"},
			{ "Name" : "WIN7_TOAST_TEXT_2", "Value" : "Content"},
			{ "Name" : "WIN7_TOAST_PARAM", "Value" : "/SecondPage.xaml?CUSTOM_PAR=test"}
		]  
	}

The following message will be sent to the device:

	<?xml version="1.0" encoding="utf-8"?>
	<wp:Notification xmlns:wp="WPNotification">
		<wp:Toast>
			<wp:Text1>Title</wp:Text1>
			<wp:Text2>Content</wp:Text2>
			<wp:Param>/SecondPage.xaml?CUSTOM_PAR=test</wp:Param>
		</wp:Toast>
	</wp:Notification>

Custom tile message. A secondary tile must exist with the address "/MainPage.xaml?MyTiles=1" (or wetheaver you like). From a message to the platform:

	{   
		"Title":"Dummy Title", 
		"Content":"Dummy Content", 
		"Context":"Deltatre", 
		"Attributes": [ 
			{"Name" : "WIN7_TYPE", "Value" : "tile"},
			{"Name" : "WIN7_TILE_COUNT", "Value" : "4"},
			...
		]  
	}

With the followin parameters:

- WIN7\_TYPE:tile;
- WIN7\_TILE_TILE_ID:/MainPage.xaml?MyTiles=1
- WIN7\_TILE_BACKGROUND_IMAGE:Green.jpg
- WIN7\_TILE_COUNT:4
- WIN7\_TILE_TITLE:Title
- WIN7\_TILE_BACK_BACKGROUND_IMAGE:Blue.jpg
- WIN7\_TILE_BACK_TITLE:Back Title

The following message will be sent to the device:

	<?xml version="1.0" encoding="utf-8"?>    
	<wp:Notification xmlns:wp="WPNotification">    
		<wp:Tile ID="/SecondPage.xaml?MyTiles=1">       
			<wp:BackgroundImage>Green.jpg</wp:BackgroundImage>       
			<wp:Count>4</wp:Count>       
			<wp:Title>Title</wp:Title>    
			<wp:BackBackgroundImage>Blue.jpg</wp:BackBackgroundImage>
			<wp:BackTitle>Back Title</wp:BackTitle>
			<wp:BackContent Action="Clear"></wp:BackContent>
		</wp:Tile> 
	</wp:Notification>

Message on the main tile. The application must be pinned on the home page for this to work. From a message to the platform:

	{   
		"Title":"Dummy Title", 
		"Content":"Dummy Content", 
		"Context":"Deltatre", 
		"Attributes": [ 
			{"Name": "WIN7_TYPE", "Value" : "tile"},
			{"WIN7_TILE_COUNT":"4"}
			...
		]  
	}

With the followin parameters:

- WIN7\_TYPE:tile
- WIN7\_TILE_BACKGROUND_IMAGE:Green.jpg
- WIN7\_TILE_COUNT:4
- WIN7\_TILE_TITLE:Title
- WIN7\_TILE_BACK_BACKGROUND_IMAGE:Blue.jpg
- WIN7\_TILE_BACK_TITLE:Back Title
- WIN7\_TILE_BACK_CONTENT:Back Content

The following message will be sent to the device:

	<?xml version="1.0" encoding="utf-8"?>    
	<wp:Notification xmlns:wp="WPNotification\">    
		<wp:Tile>       
			<wp:BackgroundImage>Green.jpg</wp:BackgroundImage>       
			<wp:Count>4</wp:Count>       
			<wp:Title>Title</wp:Title>    
			<wp:BackBackgroundImage>Blue.jpg</wp:BackBackgroundImage>
			<wp:BackTitle>Back Title</wp:BackTitle>
			<wp:BackContent >Back Conent</wp:BackContent>
		</wp:Tile> 
	</wp:Notification>

### Message received by the Blackberry

The message received by the Blackberry will be...

## The target token

Each target type has a specific token that allow the specific identification of the target. There are various available identifiers:

- **iOS** "abcdf09adacb729178d477dbed0c0c8a8e8acd58718840b064a1901e970f90d9" It represents the association between the target and the subscription.
- **Android** "APA91bFljRoBmwiszwKBkyKyQSemLehfHjR4ZlbRBV3aA4-_Olr3uazpU-lciTi0kcbMzVlO7vbyx2qMtWSu_UL-EtWt8UoOxa3ceEiPGH5Y0oTh-4-5ltAE17w5UG7MVBY5oF4erA8y7gcYAZ6zj-iakGY-47Un7w" It represents the association between the target and the subscription.
- **Blackberry** "28A096FF" It is the uinique identifier of the device.
- **Windows Phone 7** "http://db3.notify.live.net/throttledthirdparty/01.00/AAGzRkJmhijaS5ih6or4QlVtAgAAAAADAQAAAAQUZm52OjIzOEQ2NDJDRkI5MEVFMEQ" This the address to use while sending notifications to the specific device subscribed to the specific subscription.

## Special Parameters

Inside the attributes could be inserted up to three parameters (key-value pairs). Everyone specific for a given target type.

The allowed keys are in a form "(IOS|ANDROID|RIM|WIN7)\_P(1|2|3)". The list will be translated into a list of "P(1|3)" parameters. 
E.g. when a message is sent containing the IOS\_P1, the ANDROID\_P2 and the ANDROID\_P1 parameters, the Android target will receive P1 and P2, 
while the iOS target will receive its own P1 parameter.


## Target Specific Messages

For certain target is possible to send a specific message to use at most its capabilities. When sending a target specific message the standard message WILL NOT BE SENT. The part of the parameter name between brackets is the name used by the producer/supplier of the specific target.

## Windows Mobile 7

See MSDN Documentation to understand the meaning of the various parameters. A parameter named "TYPE" must be sent with a value of "TILE", "TOAST" or "RAW". All the parameters MUST start with the "WIN7_" (included the "TYPE" that wille be "WIN7_TYPE") prefix.

- **Toast
	- **TOAST\_TEXT\_1(Text1)** The title to show.
	- **TOAST\_TEXT\_2(Text2)** The content to show.
	- **TOAST\_PARAM(Param)** The query string to pass to the application. If it is specified the application will be opened, passing the string to the application.
- **Tile** If a parameter is not supplied on a second call, it will be removed as per the "Action=Cancel" specification (see MSDN documentation) except for the the TILE\_ID
	- **TILE\_TILE\_ID(ID)** The query string to pass to the application. If it is specified the application will be opened, passing the string to the application.
	- **TILE\_BACKGROUND_IMAGE(BackgroundImage)** The back tile background image (cannot be canceled).
	- **TILE\_COUNT(Text1)** The tile badge.
	- **TILE\_TITLE(Title)** The tile title to show.
	- **TILE\_BACK\_BACKGROUND\_IMAGE(BackBackgroundImage)** The back tile background image (cannot be canceled).
	- **TILE\_BACK\_TITLE(BackTitle)** The back tile title.
	- **TILE\_BACK\_CONTENT(BackContent)** The back tile content.
- **Raw** This message can only be received when the application is running. It's composed of several key-value pairs, the key starting with "RAW\_". Remember always that the complete parameter name will be "WIN7\_RAW\_\[parameter name\]"

